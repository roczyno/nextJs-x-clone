generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int         @id @default(autoincrement())
  email       String      @unique
  username    String?
  displayName String?
  bio         String?
  location    String?
  website     String?
  img         String?
  cover       String?
  posts       Post[]
  likes       Like[]
  saves       savePosts[]
  followers   follow[]    @relation("userFollowers")
  following   follow[]    @relation("userFollowings")
}

model Post {
  id           Int         @id @default(autoincrement())
  desc         String?     @db.VarChar(255)
  img          String?
  video        String?
  isSensitive  Boolean     @default(false)
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt
  user         User        @relation(fields: [userId], references: [id])
  userId       Int
  rePostId     Int?
  rePost       Post?       @relation("RePost", fields: [rePostId], references: [id])
  rePosts      Post[]      @relation("RePost")
  parentPostId Int?
  parentPost   Post?       @relation("ParentComments", fields: [parentPostId], references: [id])
  comments     Post[]      @relation("ParentComments")
  likes        Like[]
  saves        savePosts[]
}

model Like {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model savePosts {
  id     Int  @id @default(autoincrement())
  user   User @relation(fields: [userId], references: [id])
  userId Int
  post   Post @relation(fields: [postId], references: [id])
  postId Int
}

model follow {
  id          Int  @id @default(autoincrement())
  follower    User @relation("userFollowers", fields: [followerId], references: [id])
  followerId  Int
  following   User @relation("userFollowings", fields: [followingId], references: [id])
  followingId Int
}
